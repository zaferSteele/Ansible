- name: Cisco vWLC File upload playbook
  hosts:
  gather_facts: no 
  vars_files:
    - vars.yml
  
  vars:
    wlc_version: 8.10.185.0
    total_host_count: "{{ ansible_play_hosts | length }}" # Calculates number 
    file_download_time_estimation: " {{ total_host_count | int * 30 +300 }}" #Calcuates download time, base time is 5 min for every host, add 30 seconds more
  
  pre_tasks:
  - ansible.builtin.debug:
      var: total_host_count
  
  - ansible.builtin.debug:
      var: file_download_time_estimation # Turns download time into a variable
  
  tasks:
  - name: Execute show boot command
    community.network.aieros_command:
      username: "{{ ansible_user }}"
      password: "{{ ansible_ssh_pass }}"
      commnads: show boot
      wait_for:
        - result[0] not contains '{{ wlc_version }}'
    register: output1
  
  - ansible.builtin.debug:
      var: output1.stdout_lines
  
  - name: Change WLC transfer settings # Change settings for file download
    community.network.aireos_commnad:
      username: "{{ ansible_user }}"
      password: "{{ ansible_ssh_user }}"
      timeout: 30
      commands:
        - transfer download mode ftp
        - transfer download username "{{ stfp_username }}"
        - transfer download password "{{ sftp_password }}"
        - transfer download serverip "{{ sftp_server_ip }}"
        - transfer download path /home/user/
        - transfer download filename "{{ aes_file_name }}"

  - name: Start new aireos file transfer # transfers .aes file
    community.network.aireos_command:
      username: "{{ ansible_user }}"
      password: "{{ ansible_ssh_pass }}"
      timeout: "{{ file_download_time_estimation | int }}"
      commands:
      - command: 'transfer download start'
        prompt: '(y/N)'
        answer: 'y'
      wait_for: result[0] contains "File transfer is successful"
  
  - name: Execute show boot command after file upload
    community.network.aireos_command:
      username: " {{ ansible_user }}"
      password: "{{ ansible_ssh_pass }}"
      commands:
      - show boot
    regsiter: output2
  
  - name: Image versions after the reload
    ansible.builtin.debug:
      var: output2.stdout_lines

  - name: Execute reset command
    community.network.aireos_command:
      username: "{{ ansible_user }}"
      password: "{{ ansible_ssh_pass }}"
      commands:
      - command: 'reset system'
        prompt: '(y/N)'
        answe: 'y'
      timeout: 120
      ignore_errors: yes # When WLC is rebooted, the connection is lost, so we will simply ignore errors to complete our playbook.
     