- name: Check and create a backup directory on the Ansiblen Control Machine
  hosts: localhost
  gather_facts: false

  tasks:
  - name: Check if the backup directory exists
    ansible.builtin.stat:
      path: ./backup
    register: backup_dir

  - name: Create backup directory
    ansible.builtin.file:
      path: ./backup
      state: directory
    when: not backup_dir.stat.exists
  
- name: Backup Cisco IOS-XE Router and Switch configurations
  hosts: ios_devices
  gather_facts: false

  vars_files:
  - vars.yml

  vars:
    timestamp: "{{ lookup('pipe', 'date +%Y%m%d-%H%M') }}"
  
  tasks:
  - name: Run show run and save to a file
    cisco.ios.ios_config:
      backup: yes
      backup_options: 
        filename: "{{ inventory_hostname }}-running-config.cfg"
        dir_path: ./backup/{{ timestamp }}_backup
  
  - name: Print message when completed
    ansible.builtin.debug: msg="{{ inventory_hostname }} - Backup to local storage completed"

- name: Copy backup files to the SCP server
  hosts: localhost
  gather_facts: false

  vars_files:
  - vars.yml

  vars:

    scp_servers:
      server1:
        ip: 192.168.255.3
        path: /home/user/
      server2:  
        ip: 192.168.255.5
        path: /home/user

  tasks:
  - name: Run SCP command
    ansible.builtin.expect:
      command: "scp -r ./backup user@{{ item.value.ip }}:{{ item.value.path }}"
      responses:
        "user@{{ item.value.ip }}'s password:": "{{ passphrase_response }}"
    register: scp_output
    loop: "{{ scp_servers | dict2items }}"
  
  - name: Print message when completed
    ansible.builtin.debug:
      var: scp_output
    
  - name: Remove "backup" directory on Ansible Control Machine
    ansible.builtin.file:
      path: "./backup/"
      state: absent





