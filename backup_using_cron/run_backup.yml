---
- name: Check and create backup directory on Ansible Control machine # Play 1
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Check if backup directory exists # Play 1, task 1
      ansible.builtin.stat:
        path: ./backup
      register: backup_dir

    - name: Create backup directory # Play 1, task 2
      ansible.builtin.file:
        path: ./backup
        state: directory
      when: not backup_dir.stat.exists

- name: Backup Cisco IOS-XE Router and Switch configurations # Play 2
  hosts: ios_xe_devices
  gather_facts: false

  vars_files: vars.yml

  vars:
    timestamp: "{{ lookup('pipe', 'date +%Y%m%d-%H%M') }}"

  tasks:
    - name: Run show run and save to a file # Play 2, task 1
      cisco.ios.ios_config:
       backup: yes
       backup_options:
         filename: "{{ inventory_hostname }}-running-config.cfg"
         dir_path: /home/jdoe/ch14/backup/{{ timestamp }}_backup # be very specific with dir_path

- name: Copy backup files to SCP server # Play 3
  hosts: localhost
  gather_facts: false

  vars_files: vars.yml

  vars:
    scp_servers:
      - ip: "192.168.127.151"
        path: "/home/jdoe/"
      - ip: "192.168.127.161"
        path: "/home/jdoe/"
      - ip: "192.168.127.162"
        path: "/home/jdoe/"

  tasks:
    - name: Run SCP command # Play 3, task 1
      ansible.builtin.expect:
        command: "scp -r ./backup jdoe@{{ item.ip }}:{{ item.path }}"
        responses:
          "Enter passphrase for key '/home/jdoe/.ssh/id_ed25519':": "{{ passphrase_response }}"
      register: scp_output
      loop: "{{ scp_servers }}"

- name: Remove the backup directory on Ansible Control Machine for security # Play 4
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Remove backup directory # Play 4, task 1
      ansible.builtin.file:
        path: "./backup/"
        state: absent
